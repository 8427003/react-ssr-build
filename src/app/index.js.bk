import React, { Component } from 'react';
import { Switch, Route, Redirect, StaticRouter as Router } from 'react-router';
import Loadable from 'react-loadable';
import routerList from '../config/router';
import './index.less';

const routers = routerList.filter(item => {
    return item.type !== 'Redirect'
})

const redirects = routerList.filter(item => {
    return item.type === 'Redirect'
})

const Loading = ({pastDelay}) => {
    if (pastDelay) {
        return <div className="p-loading"><div className="lds-dual-ring"></div></div>
    }
    return null;
}

export default function () {
    return (
        <Router location="/rules">
            <Switch>
                {routers.map(item => {
                    let props = {
                        key: item.path,
                        path: item.path,
                        component: Loadable({
                            loader: item.component,
                            loading: Loading,
                            delay: 100,
                            render: (loaded, props) => {
                                if(props.match && props.match.url) {
                                    _czc.push(["_trackPageview",props.match.url]);
                                }
                                let Component = loaded.default;
                                // Component = hot(module)(Component);
                                return <Component {...props} />
                            }
                        }),
                    }

                    return <Route {...props} />
                })}

                {redirects.map(item => {
                    return <Redirect key={item.from} from={item.from} to={item.to} />
                })}
            </Switch>
        </Router>
    )
}
